#!/bin/sh

set -e


case "$1" in
  "--help"|"-h"|"")
    echo "Usage: $0 [options] output-image-name spec-file source-dir" >&2
    echo "  -q|--quiet   Don't print commands as they are executed" >&2
    echo "  -d|--debug   When a RUN command fails, start a shell to debug" >&2
    exit 1
    ;;
esac

quiet=
debug=

while [ -n "$1" ]; do
  case "$1" in
    "--quiet"|"-q")
      quiet=true
      shift
      ;;
    "--debug"|"-d")
      debug=true
      shift
      ;;
    "-"*)
      echo "Unknown flag: $1" >&2
      exit 1
      ;;
    *)
      break; # end of option args
      ;;
  esac
done

name="$1"
spec="$2"
source="$3"

build_dir="/var/cookie-cutter/containers/build.$$"

my_dir="`dirname $0`"
trap "
  '$my_dir'/cc-umount 'build.$$'
  rm -rf --one-file-system $build_dir $image_base.$$
" \
  INT TERM HUP EXIT

# Indent stderr and stdout separately while preserving exit status.
indent () {
  local status_file="tmp.$$.status"
  {
    {
      {
        "$@"
        echo $? > "$status_file" # note exit status
      } | sed 's/^/  /' # filter stdout
    } 3>&1 1>&2 2>&3 | # swap stderr and stdout
    sed 's/^/  /' # filter stderr
  } 3>&1 1>&2 2>&3 # swap stderr and stdout back
  status="$(cat "$status_file")"
  rm "$status_file"
  return "$status"
}

while read cmd arg1 arg2 rest <&3; do

  if echo "$cmd" | grep -q '^\s*#'; then
    # Skip comment
    continue
  elif echo "$cmd" | grep -q '^$'; then
    # Show single blank line in ouput.
    [ "x$quiet" != "xtrue" ] && echo
    continue
  fi

  if [ "x$quiet" != "xtrue" ]; then
    echo
    echo "$cmd $arg1 $arg2 $rest"
    indent=indent
  fi

  case "$cmd" in
    FROM)
      from_name="$arg1"
     "$my_dir"/cc-create "build.$$" "$from_name"
      ;;
    COPY)
      cp -r "$source/$arg1" "$build_dir/filesystem/$arg2"
      ;;
    RUN)
      #echo arg1="$arg1"
      #echo arg2="$arg2"
      #echo rest="$rest"
      command="$arg1 $arg2 $rest"
      $indent "$my_dir"/cc-exec "build.$$" sh -c "$command" || {
        echo "Error running: $command" >&2
        if [ "x$debug" = "xtrue" ]; then
          "$my_dir"/cc-exec "build.$$" "$SHELL"
        fi
        exit 1
      }
      ;;
    *)
      echo "Unknown command: '$cmd'" >&2
  esac
done 3< "$spec"

"$my_dir"/cc-save "build.$$" "$name"
