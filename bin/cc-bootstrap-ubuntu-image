#!/bin/sh

set -e

case "$1" in
  "--help"|"-h"|"")
    echo "Usage: $0 mirror version_name" >&2
    echo "Builds a minimally bootstrapped image without security patching." >&2
    exit 1
    ;;
esac

mirror="$1"
version_name="$2"
build_name="build.$$"
build_dir="/var/cookie-cutter/containers/$build_name"
image_base="/var/cookie-cutter/images/$version_name"
parent_image_name="empty"

my_dir="`dirname $0`"
# Warning: this seems to run twice on interrupt, once for INT and once
# for EXIT.  So ensure these are idempotent.
trap "
  echo Cleaning up... >&2
  '$my_dir'/cc-umount '$build_name'
  rm -rf --one-file-system '$build_dir'
" INT TERM HUP EXIT

"$my_dir"/cc-create-fs --name "$build_name" "$parent_image_name"

# Ubuntu 20.04 and 22.04 don't have a duplicity package for i386, but
# they were still able to bootstrap a working image from i386, so
# there could be use-cases for it.  But DigitalOcean only offers
# 64-bit droplets now, so i386 seems very hypothetical.  Although I
# _could_ revisit the image naming scheme to support multiple arches
# per ubuntu release, as i386 probably still uses less memory for some
# things, for now just hard-code 64-bit.
#
# x86_64 didn't work, even though that was the DO `arch`, so map it to
# amd64.
debootstrap --variant=buildd --arch amd64 \
  "$version_name" "$build_dir/filesystem" \
  "$mirror"

echo "$version_name" > "$build_dir/filesystem"/etc/debian_chroot

"$my_dir"/cc-save "$build_name" "$version_name-bootstrap"
