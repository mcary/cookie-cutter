#!/bin/sh

set -e

case "$1" in
  "--help"|"-h"|"")
    echo "Usage: $0 [options] image-name [nspawn_options]" >&2
    echo "" >&2
    echo "  --name container_name" >&2
    echo "      Give the container a name to refer to with cc-exec" >&2
    echo "      or to ensure only one such container on the system." >&2
    echo "" >&2
    echo "  --rm" >&2
    echo "      Automatically remove the container on exit." >&2
    echo "      Implied when no '--name' option is given." >&2
    echo "" >&2
    echo "  -v|--volume host-path:container-path" >&2
    echo "      Bind-mount host-path on the host VM as container-path" >&2
    echo "      within the guest container." >&2
    exit 1
    ;;
esac

my_dir="`dirname $0`"
container_name="$("$my_dir"/cc-create-fs "$@")"

while [ -n "$1" ]; do
  case "$1" in
    "--volume"|"-v")
      shift 2
      ;;
    "--name")
      named=1
      shift 2
      ;;
    "--rm")
      remove=1
      shift
      ;;
    "-"*)
      # Ignore options (such as --name, used by cc-create-fs).
      shift
      ;;
    *)
      break; # end of option args
      ;;
  esac
done

if [ "$named" = "" ]; then
  remove=1
fi

image_name="$1"
shift 1
image="/var/cookie-cutter/images/$image_name"

container="/var/cookie-cutter/containers/$container_name"
echo "$container_name" > "$container"/filesystem/etc/debian_chroot

cleanup="
  #echo Cleaning up... >&2
  '$my_dir'/cc-umount '$container_name'
"
if [ "$remove" = "1" ]; then
  cleanup="
    $cleanup
    '$my_dir'/cc-remove '$container_name'
  "
fi
trap "$cleanup" INT TERM HUP EXIT

(
  # We need to exec so that we can know the pid of systemd-nspawn and record
  # it before it starts.  We need the subshell -- using parens -- so that
  # the outer shell can still clean up when the container exits.
  # Since $$ expands to the outer shell's pid, we need to be more clever to
  # get the subshell's pid.
  read pid _rest < /proc/self/stat
  echo $pid > "$container/pid"

  exec systemd-nspawn --boot --quiet \
    --directory="$container"/filesystem -M "$container_name" "$@"
)
