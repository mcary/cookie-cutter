#!/bin/sh

set -e

case "$1" in
  "--help"|"-h"|"")
    echo "Usage: $0 container-name image-name" >&2
    exit 1
    ;;
esac

image_name="$2"
container_name="$1"
container="/var/cookie-cutter/containers/$container_name"
image="/var/cookie-cutter/images/$image_name"
rand=$(tr -dc 'a-zA-Z0-9' </dev/urandom | head -c 6)
image_version_name="$(date +"%Y-%m-%d_%H-%M-%S_%N").$rand"
image_version="$image/versions/$image_version_name"
image_version_tmp="$image_version.tmp"

for dir in "$image" "$image/versions" "$image_version"; do
  if ! [ -d "$dir" ]; then
    mkdir "$dir"
  fi
done

my_dir="`dirname $0`"
"$my_dir"/cc-umount "$container_name"

trap "
  rm -rf --one-file-system '$image_version_tmp'
" INT TERM HUP EXIT

mkdir "$image_version_tmp"
mv "$container/diff" "$image_version_tmp/diff"
mv "$container/from" "$image_version_tmp/from"

# Record that we are using an image, so that the image can efficiently detect
# when all references are removed (as shown by the file link count decreasing
# from 2 to 1).
from_image="/var/cookie-cutter/images/$(cat "$image_version_tmp/from")"
for dir in references references/images; do
  if ! [ -d "$from_image/$dir" ]; then
    mkdir "$from_image/$dir"
  fi
done
echo "$image_version" > "$image_version_tmp/self"
ln "$image_version_tmp/self" \
  "$from_image/references/images/$image_name@${image_version_name}"

rm -rf --one-file-system "$image_version"
# Clean up vestiges of the old image format.
rm -rf --one-file-system "$image/from" "$image/diff"
mv "$image_version_tmp" "$image_version"
ln -nfs "versions/$image_version_name" "$image/current"
# Leave the container until the image is successfully created (above).
rm -rf --one-file-system "$container"

"$my_dir"/cc-gc "$image_name"
